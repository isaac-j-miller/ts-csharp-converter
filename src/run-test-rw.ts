import { NameType, CasingConvention } from "./converter/name-mapper";
import { convertTypescriptToCSharp } from "./index";

const main = async () => {
  await convertTypescriptToCSharp(
    "/Users/imiller/code/report-wrangler/packages/report-core/src/dotnet.index.ts",
    "/Users/imiller/code/report-wrangler/tsconfig-global.json",
    "./tmp/ReportWrangler.cs",
    "ReportWrangler",
    {
      transforms: {
        [NameType.DeclarationName]: {
          output: CasingConvention.PascalCase,
        },
        [NameType.PropertyName]: {
          output: CasingConvention.PascalCase,
        },
        [NameType.EnumMember]: {
          output: CasingConvention.PascalCase,
        },
      },
    },
    false,
    new Set([
      "JsonSchema",
      "DeepPartial",
      "RwContext",
      "SpanWrapped",
      "Headers",
      "SchemaProvider",
      "TableWriteRequest",
      "DynamoDbAPI",
      "AsyncOptions",
      "SpanWrapped",
      "StackItem",
      "TracingContextUnpackaged",
      "TracingContextPackaged",
      "NodeEnv",
      "Resources",
      "Timer",
      "WrapperData",
      "DbAdapter",
      "Cache",
      "ConfigByEnv",
      "S3Tree",
      "RuntimeConfig",
      "ParsedLoggable",
      "Transform",
      "TimerCotr",
      "ReportCallback",
      "FilterCallbackPredicate",
      "ReportRequestDetails",
      "SchemaType",
      "InternalGlobalFieldNames",
      "ReportFields",
      "ReportConfiguration",
      "TokenMap",
      "ReportMetadata",
      "JobSummary",
      "DataFetchRequest",
      "DataBindingRequest",
      "DataFetchRequestInternal",
      "DataBindingRequestInternal",
      "ReportRequestInternal",
      "PassThroughMap",
      "Loggable",
      // TODO: get rid of most of this stuff because it should filter most of it out on its own now.
      "JobQueryOptions",
      "FunctionMap",
      "AsProperties",
      "Loggable",
      "Logger",
      "EventLogger",
      "SyncLogWriter",
      "AsyncLogWriter",
      "LogFilter",
      "ArrayOneOrMore",
      "NonFunctionPropertyNames",
      "Denominalize",
      "PopulatedMap",
      "BackoffConfig",
      "SqsConsumerConfig",
      "AwsHttpOptions",
      "AwsServiceGlobalOptions",
      "BuildConfig",
      "SecretsConfig",
      "SecretsConfigPromise",
      "RuntimeConfig",
      "ServerWindow",
      "ClientOptions",
      "ReportWizardOptions",
      "AdminOptions",
      "I18nMessageType",
      "SsrClientConfig",
      "InvocationContextMenuOption",
      "InvocationContextOptions",
      "FeatureToggles",
      "RandomStringOptions",
      "Context",
      "NodeVisited",
      "S3Request",
      "S3PutRequest",
      "S3PutObjectRequest",
      "S3DeleteObjectRequest",
      "S3GetObjectRequest",
      "S3HeadObjectRequest",
      "S3TreeParams",
      "PdfOrXlsxInternalGlobalOptionsFieldNames",
      "JobReports",
      "Options",
      "LogEmitter",
      "Services",
      "RwCluster",
      "ReportService",
      "ConfigResponse",
      "ReportTypeSwitch",
      "JobStoreDbMethods",
      "RqcAppConfig", 
      "RqcAppConfigGeneric",
      "ReportManifest",
      "ReportManifestGeneric",
      "ReportBase",
      "ReportVisibilityCriteria",
      "ParsedEntityDataKey",
      "JobStatusByUser",
      "UpdateRecord",
      "EntityDataRecord",
      "EntityDataRecords",
      "ReportDataRecord",
      "ReportDataRecords",
      "JobDataDetails",
      "JobStoreRecordBase",
      "JobDataRecordBase",
      "JobDataKey",
      "JobDataStatus",
      "JobDataStatuses",
      "JobDataUserId",
      "JobDataDetails",
      "JobStatusInfo",
      "SchemaNameParam",
      "CueJobDetails",
      "ClientJobRequestGeneric",
      "ReportOptions",
      "PdfReportConfiguration",
      "ReportManifestInternal",
      "UpdateJobDataRecord",
      "JobDataCreatedDate",
      "UploadSchemaParams",
      "GetDynamoBackupParams",
      "RestoreDynamoTableParams",
      "ReportQueueParams",
      "GlobalOptionWithLayout",
      "GlobalOptions",
      "CancelJobRequest",
      "CancelJobResponse",
      "GenerateResponse",
      "Cookies",
      "FormFieldTypes",
    ])
  );
};

void main();
